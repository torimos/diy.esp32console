#include <Arduino.h>
#include "SPI.h"
#include "Adafruit_GFX.h"
#include "Adafruit_ILI9341.h"

// For the ESP-WROVER_KIT, these are the default.

#define TFT_MOSI 23 //pink
#define TFT_MISO 19 //green
#define TFT_CLK  18 //white
#define TFT_CS   5  //orange
#define TFT_DC   26//2 //black
#define TFT_RST  33//15 //blue

#define RIGHT_BTNS 36
#define LEFT_VX 0
#define LEFT_VY 4
#define LEFT_SW 2

#define UP_BTN 1
#define LEFT_BTN 1<<4
#define DOWN_BTN 1<<3
#define RIGHT_BTN 1<<2
#define CENTER_BTN 1<<5
#define JOY_BTN 1<<6

SPIClass tftSPI(VSPI);
Adafruit_ILI9341 tft = Adafruit_ILI9341(&tftSPI, TFT_DC, TFT_CS, TFT_RST);
int lines = 0;
typedef struct
{
  byte btn;
  short x, y;
} InputState;

InputState _lastState;
InputState _initialState;

InputState readInput();

int game = 1, gt;
int px, py, dx, dy;
ushort pc[] = { ILI9341_BLUE, ILI9341_GREEN, ILI9341_RED, ILI9341_YELLOW, ILI9341_ORANGE, ILI9341_SLPIN, ILI9341_PINK, ILI9341_OLIVE };

void setup() {
  Serial.begin(115200);

  tft.begin();
  tft.setRotation(1);
  tft.fillScreen(ILI9341_BLACK);
  tft.setCursor(0, 0);
  tft.setTextColor(ILI9341_YELLOW); 
  tft.setTextSize(1);

  _initialState = _lastState = readInput();
  px=py=0;
  dx = millis()%2;
  dy = dx > 0 ? 0 : 1;
  gt = 0;
  game = 1;
}
int lastTick = 0;
void loop(void) {

  InputState s = readInput();
  int jx = s.x - _initialState.x;
  int jy = _initialState.y - s.y;

  if ((px < 0) || (py < 0) || (px >= 320) || (py >= 240))
    game = 0;
  if (game == 1)
  {
    tft.drawPixel(px, py, ILI9341_GREEN);

    if ((millis()-lastTick) > 25)
    {
      px += dx;
      py += dy;
      lastTick = millis();
    }
    int t = 200;
    if (jx <-t) {
      dx = -1;dy=0;
    }
    else if (jx > t) {
      dx =  1;dy=0;
    }
    else if (jy <-t) {
      dy = -1;dx=0;
    }
    else if (jy > t) {
      dy =  1;dx=0;
    }
  }
  else
  {
    tft.fillScreen(ILI9341_BLACK);
    tft.setCursor(0,0);
    tft.println("GAME OVER");
    while(s.btn == 0) s = readInput();
    tft.fillScreen(ILI9341_BLACK);
    tft.setCursor(0,0);
    tft.println("NEW GAME");
    px=py=0;
    dx = millis()%2;
    dy = dx > 0 ? 0 : 1;
    gt = 0;
    game = 1;
    delay(2000);
    tft.fillScreen(ILI9341_BLACK);
  }
  gt++;
  _lastState = s;
}

InputState readInput()
{
  InputState state;
  state.btn = 0;
  state.x = analogRead(LEFT_VX);
  state.y = analogRead(LEFT_VY);
  int v = analogRead(RIGHT_BTNS);
  int sw = analogRead(LEFT_SW);
  if (v < 1200)
  {
    if (v < 50 )
    {
      state.btn = UP_BTN; //UP;1
    }
    else if (v < 100)
    {
      state.btn |= LEFT_BTN; //LEFT; 1<<4
    }
    else if (v < 400)
    {
      state.btn |= DOWN_BTN; //DOWN; 1<<3
    }
    else if (v < 700)
    {
      state.btn |= RIGHT_BTN; //RIGHT; 1<<2
    }
    else 
    {
      state.btn |= CENTER_BTN; //CENTER; 1<<5
    } 
  }
  if (sw < 50)
  {
    state.btn |= JOY_BTN; //LEFT SWITCH BUTTON; 1<<6
  }
  return state;
}